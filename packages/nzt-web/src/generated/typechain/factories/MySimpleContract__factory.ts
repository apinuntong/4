/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MySimpleContract,
  MySimpleContractInterface,
} from "../MySimpleContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105ef3803806105ef83398101604081905261002f916100e2565b8051610042906000906020840190610049565b5050610202565b828054610055906101b1565b90600052602060002090601f01602090048101928261007757600085556100bd565b82601f1061009057805160ff19168380011785556100bd565b828001600101855582156100bd579182015b828111156100bd5782518255916020019190600101906100a2565b506100c99291506100cd565b5090565b5b808211156100c957600081556001016100ce565b600060208083850312156100f557600080fd5b82516001600160401b038082111561010c57600080fd5b818501915085601f83011261012057600080fd5b815181811115610132576101326101ec565b604051601f8201601f19908116603f0116810190838211818310171561015a5761015a6101ec565b81604052828152888684870101111561017257600080fd5b600093505b828410156101945784840186015181850187015292850192610177565b828411156101a55760008684830101525b98975050505050505050565b600181811c908216806101c557607f821691505b602082108114156101e657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6103de806102116000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306fdde031461004657806317d7de7c14610064578063c47f00271461006c575b600080fd5b61004e610081565b60405161005b9190610302565b60405180910390f35b61004e61010f565b61007f61007a366004610251565b6101a1565b005b6000805461008e90610357565b80601f01602080910402602001604051908101604052809291908181526020018280546100ba90610357565b80156101075780601f106100dc57610100808354040283529160200191610107565b820191906000526020600020905b8154815290600101906020018083116100ea57829003601f168201915b505050505081565b60606000805461011e90610357565b80601f016020809104026020016040519081016040528092919081815260200182805461014a90610357565b80156101975780601f1061016c57610100808354040283529160200191610197565b820191906000526020600020905b81548152906001019060200180831161017a57829003601f168201915b5050505050905090565b80516101b49060009060208401906101b8565b5050565b8280546101c490610357565b90600052602060002090601f0160209004810192826101e6576000855561022c565b82601f106101ff57805160ff191683800117855561022c565b8280016001018555821561022c579182015b8281111561022c578251825591602001919060010190610211565b5061023892915061023c565b5090565b5b80821115610238576000815560010161023d565b60006020828403121561026357600080fd5b813567ffffffffffffffff8082111561027b57600080fd5b818401915084601f83011261028f57600080fd5b8135818111156102a1576102a1610392565b604051601f8201601f19908116603f011681019083821181831017156102c9576102c9610392565b816040528281528760208487010111156102e257600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b8181101561032f57858101830151858201604001528201610313565b81811115610341576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061036b57607f821691505b6020821081141561038c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212206a55a08e5daaaa7380ab52d166e28804c64dd6ec5c5d48559d0ac9ae8fbbfe0d64736f6c63430008060033";

type MySimpleContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MySimpleContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MySimpleContract__factory extends ContractFactory {
  constructor(...args: MySimpleContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MySimpleContract";
  }

  deploy(
    _name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MySimpleContract> {
    return super.deploy(_name, overrides || {}) as Promise<MySimpleContract>;
  }
  getDeployTransaction(
    _name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, overrides || {});
  }
  attach(address: string): MySimpleContract {
    return super.attach(address) as MySimpleContract;
  }
  connect(signer: Signer): MySimpleContract__factory {
    return super.connect(signer) as MySimpleContract__factory;
  }
  static readonly contractName: "MySimpleContract";
  public readonly contractName: "MySimpleContract";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MySimpleContractInterface {
    return new utils.Interface(_abi) as MySimpleContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MySimpleContract {
    return new Contract(address, _abi, signerOrProvider) as MySimpleContract;
  }
}
